version: '3'

services:

  ### NGINX Server #########################################
  nginx:
    container_name: nginx
    hostname: nginx
    build:
      context: ./nginx
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}:rw
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/vhost
    environment:
      - TZ=${TZ}
    ports:
      - "80:80"
      - "8000-8010:8000-8010"
    restart: always
    networks:
      - workdock

  ### MySQL ################################################
  mysql:
    container_name: mysql
    image: mysql:${MYSQL_VERSION}
    hostname: mysql
    cap_add:
      - SYS_NICE
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
    ports:
      - "${MYSQL_PORT}:3306"
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=${MYSQL_ROOT_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5
    networks:
      - workdock

  ### Redis ################################################
  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    hostname: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:3306"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}",  "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - workdock

  ### REDISWEBUI ################################################
  redis-webui:
    container_name: redis-webui
    build:
      context: ./redis-webui
    environment:
      - ADMIN_USER=${REDIS_WEBUI_USERNAME}
      - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
      - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}
      - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}
    networks:
      - workdock
    ports:
      - "${REDIS_WEBUI_PORT}:80"
    depends_on:
      - redis

  ### DEFAULT PHP-7.4 ##############################################
  php:
    container_name: php
    hostname: php
    build:
      context: ./php-7.4
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - COMPOSER_INSTALLER_REPO=${COMPOSER_INSTALLER_REPO}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_WORKMAN_REQUIRED=${PHP_FPM_INSTALL_WORKMAN_REQUIRED}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
    volumes:
      - ./php-7.4/php7.4.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - "8787:8787" # webman port
    restart: always
    networks:
      - workdock

  ### PHP-7.3 ##############################################
  php-7.3:
    container_name: php-7.3
    hostname: php-7.3
    build:
      context: ./php-7.3
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - COMPOSER_INSTALLER_REPO=${COMPOSER_INSTALLER_REPO}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_WORKMAN_REQUIRED=${PHP_FPM_INSTALL_WORKMAN_REQUIRED}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
    volumes:
      - ./php-7.3/php7.3.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    restart: always
    networks:
      - workdock

  ### PHP-7.2 ##############################################
  php-7.2:
    container_name: php-7.2
    hostname: php-7.2
    build:
      context: ./php-7.2
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - COMPOSER_INSTALLER_REPO=${COMPOSER_INSTALLER_REPO}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_WORKMAN_REQUIRED=${PHP_FPM_INSTALL_WORKMAN_REQUIRED}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
    volumes:
      - ./php-7.2/php7.2.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    restart: always
    networks:
      - workdock

  ### PHP-5.6 ##############################################
  php-5.6:
    container_name: php-5.6
    hostname: php-5.6
    build:
      context: ./php-5.6
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - COMPOSER_INSTALLER_REPO=${COMPOSER_INSTALLER_REPO}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_WORKMAN_REQUIRED=${PHP_FPM_INSTALL_WORKMAN_REQUIRED}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
    volumes:
      - ./php-5.6/php5.6.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    restart: always
    networks:
      - workdock

  ### PHP ##############################################
  php-swoole:
    container_name: php-swoole
    build:
      context: ./php-swoole
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - COMPOSER_INSTALLER_REPO=${COMPOSER_INSTALLER_REPO}
    volumes:
      - ./php-swoole/php.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}:rw
    environment:
      - TZ=${TZ}
    ports:
      - "9500:9500"
    restart: always
    cap_add:
      - SYS_PTRACE
    stdin_open: true
    tty: true
    networks:
      - workdock

networks:
  workdock: